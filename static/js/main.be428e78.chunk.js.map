{"version":3,"sources":["Grid.jsx","constants.js","App.jsx","index.js"],"names":["Grid","_ref","grid","react_default","a","createElement","className","map","cells","row","key","cell","column","COLUMNS","ROWS","concat","DIRECTIONS","value","offsets","Array","fill","_","frames","slice","search","push","directions","nextRow","nextColumn","filter","_ref2","sort","Math","random","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","_ref4","err","return","rootElement","document","getElementById","ReactDOM","render","_useState","useState","_useState2","Object","slicedToArray","index","setIndex","useEffect","timeout","setTimeout","max","min","length","clearTimeout"],"mappings":"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","file":"static/js/main.be428e78.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { ROWS, COLUMNS, UP, RIGHT, DOWN, LEFT } from \"./constants\";\r\n\r\nexport default ({ grid }) => (\r\n  <div className=\"grid\">\r\n    {grid.map((cells, row) => (\r\n      <div key={row} className=\"row\">\r\n        {cells.map((cell, column) => {\r\n          let className = \"cell\";\r\n          if (cell & UP || (row > 0 && grid[row - 1][column] & DOWN)) {\r\n            className += \" up\";\r\n          }\r\n          if (\r\n            cell & RIGHT ||\r\n            (column < COLUMNS - 1 && grid[row][column + 1] & LEFT)\r\n          ) {\r\n            className += \" right\";\r\n          }\r\n          if (cell & DOWN || (row < ROWS - 1 && grid[row + 1][column] & UP)) {\r\n            className += \" down\";\r\n          }\r\n          if (cell & LEFT || (column > 0 && grid[row][column - 1] & RIGHT)) {\r\n            className += \" left\";\r\n          }\r\n          return <div key={`${row},${column}`} className={className} />;\r\n        })}\r\n      </div>\r\n    ))}\r\n  </div>\r\n);\r\n","export const ROWS = 54;\r\nexport const COLUMNS = 96;\r\nexport const EMPTY = 0;\r\nexport const UP = 1;\r\nexport const RIGHT = 2;\r\nexport const DOWN = 4;\r\nexport const LEFT = 8;\r\nexport const FULL = 16;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Grid from \"./Grid\";\r\nimport { ROWS, COLUMNS, EMPTY, UP, RIGHT, DOWN, LEFT, FULL } from \"./constants\";\r\n\r\nconst DIRECTIONS = [\r\n  { value: UP, offsets: [-1, 0] },\r\n  { value: RIGHT, offsets: [0, 1] },\r\n  { value: DOWN, offsets: [1, 0] },\r\n  { value: LEFT, offsets: [0, -1] }\r\n];\r\n\r\nconst grid = new Array(ROWS).fill().map(_ => new Array(COLUMNS).fill(EMPTY));\r\nconst frames = [grid.map(row => row.slice())];\r\nconst search = (row, column) => {\r\n  if (row === ROWS - 1 && column === COLUMNS - 1) {\r\n    grid[row][column] = FULL;\r\n    frames.push(grid.map(row => row.slice()));\r\n  } else {\r\n    const directions = DIRECTIONS.map(({ value, offsets }) => ({\r\n      value,\r\n      nextRow: row + offsets[0],\r\n      nextColumn: column + offsets[1]\r\n    }))\r\n      .filter(\r\n        ({ nextRow, nextColumn }) =>\r\n          nextRow >= 0 &&\r\n          nextRow < ROWS &&\r\n          nextColumn >= 0 &&\r\n          nextColumn < COLUMNS\r\n      )\r\n      .sort(() => Math.random() - 0.5);\r\n    for (const { value, nextRow, nextColumn } of directions) {\r\n      if (!grid[nextRow][nextColumn]) {\r\n        grid[row][column] = grid[row][column] | value;\r\n        frames.push(grid.map(row => row.slice()));\r\n        search(nextRow, nextColumn);\r\n      }\r\n    }\r\n    if (!grid[row][column]) {\r\n      grid[row][column] = FULL;\r\n      frames.push(grid.map(row => row.slice()));\r\n    }\r\n  }\r\n};\r\nsearch(0, 0);\r\n\r\nexport default () => {\r\n  const [index, setIndex] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      setIndex(Math.max(0, Math.min(index + 8, frames.length - 1)));\r\n    }, 1000 / 60);\r\n    return () => clearTimeout(timeout);\r\n  }, [index]);\r\n\r\n  return <Grid grid={frames[index]} />;\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nimport \"./styles.css\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n"],"sourceRoot":""}